openapi: 3.0.3
info:
  title: Workout Service API
  description: API for managing workout plans, sessions, exercises, and progress photos in the GymCoach AI application
  version: 1.0.0
  contact:
    name: GymCoach AI Team
    email: support@gymcoach-ai.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.gymcoach-ai.com
    description: Production server
  - url: https://staging-api.gymcoach-ai.com
    description: Staging server

security:
  - BearerAuth: []

paths:
  /api/workouts/plans:
    post:
      summary: Create workout plan
      description: Create a new workout plan with exercises and scheduling
      operationId: createWorkoutPlan
      tags:
        - Workout Plans
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkoutPlanRequest'
            example:
              userId: "user123"
              name: "Beginner Strength Program"
              description: "A 4-week beginner strength program"
              difficulty: "beginner"
              durationWeeks: 4
              frequencyPerWeek: 3
              exercises:
                - exerciseId: "ex123"
                  name: "Push-ups"
                  sets: 3
                  reps: 10
                  restSeconds: 60
                  order: 1
                - exerciseId: "ex456"
                  name: "Squats"
                  sets: 3
                  reps: 15
                  restSeconds: 60
                  order: 2
      responses:
        '201':
          description: Workout plan created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutPlan'
        '400':
          description: Bad request - invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: List workout plans
      description: Retrieve a list of workout plans for a user
      operationId: listWorkoutPlans
      tags:
        - Workout Plans
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          description: Unique identifier for the user
          schema:
            type: string
            example: "user123"
        - name: difficulty
          in: query
          required: false
          description: Filter by difficulty level
          schema:
            type: string
            enum: [beginner, intermediate, advanced, expert]
        - name: durationWeeks
          in: query
          required: false
          description: Filter by duration in weeks
          schema:
            type: integer
            minimum: 1
            maximum: 52
        - name: limit
          in: query
          required: false
          description: Maximum number of results to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          required: false
          description: Number of results to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Workout plans retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  workoutPlans:
                    type: array
                    items:
                      $ref: '#/components/schemas/WorkoutPlan'
                  total:
                    type: integer
                    description: Total number of workout plans
                  limit:
                    type: integer
                    description: Maximum number of results returned
                  offset:
                    type: integer
                    description: Number of results skipped
        '401':
          description: Unauthorized - invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/workouts/plans/{planId}:
    get:
      summary: Get workout plan
      description: Retrieve a specific workout plan by ID
      operationId: getWorkoutPlan
      tags:
        - Workout Plans
      security:
        - BearerAuth: []
      parameters:
        - name: planId
          in: path
          required: true
          description: Unique identifier for the workout plan
          schema:
            type: string
            example: "plan123"
      responses:
        '200':
          description: Workout plan retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutPlan'
        '401':
          description: Unauthorized - invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - insufficient permissions to access this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Workout plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update workout plan
      description: Update an existing workout plan
      operationId: updateWorkoutPlan
      tags:
        - Workout Plans
      security:
        - BearerAuth: []
      parameters:
        - name: planId
          in: path
          required: true
          description: Unique identifier for the workout plan
          schema:
            type: string
            example: "plan123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkoutPlanRequest'
            example:
              name: "Advanced Strength Program"
              description: "An 8-week advanced strength program"
              difficulty: "advanced"
              durationWeeks: 8
              frequencyPerWeek: 4
              exercises:
                - exerciseId: "ex789"
                  name: "Deadlifts"
                  sets: 5
                  reps: 5
                  restSeconds: 180
                  order: 1
      responses:
        '200':
          description: Workout plan updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutPlan'
        '400':
          description: Bad request - invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - insufficient permissions to access this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Workout plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete workout plan
      description: Delete a workout plan and all associated data
      operationId: deleteWorkoutPlan
      tags:
        - Workout Plans
      security:
        - BearerAuth: []
      parameters:
        - name: planId
          in: path
          required: true
          description: Unique identifier for the workout plan
          schema:
            type: string
            example: "plan123"
      responses:
        '204':
          description: Workout plan deleted successfully
        '401':
          description: Unauthorized - invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - insufficient permissions to access this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Workout plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/workouts/sessions:
    post:
      summary: Create workout session
      description: Create a new workout session with exercises and sets
      operationId: createWorkoutSession
      tags:
        - Workout Sessions
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkoutSessionRequest'
            example:
              userId: "user123"
              workoutPlanId: "plan123"
              name: "Upper Body Workout"
              exercises:
                - exerciseId: "ex123"
                  name: "Push-ups"
                  sets:
                    - reps: 10
                      weight: 0
                      completed: true
                      notes: "Good form"
                    - reps: 10
                      weight: 0
                      completed: true
                      notes: "Good form"
                    - reps: 8
                      weight: 0
                      completed: true
                      notes: "Last set was tough"
                  order: 1
      responses:
        '201':
          description: Workout session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutSession'
        '400':
          description: Bad request - invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: List workout sessions
      description: Retrieve a list of workout sessions for a user
      operationId: listWorkoutSessions
      tags:
        - Workout Sessions
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          description: Unique identifier for the user
          schema:
            type: string
            example: "user123"
        - name: workoutPlanId
          in: query
          required: false
          description: Filter by workout plan ID
          schema:
            type: string
            example: "plan123"
        - name: startDate
          in: query
          required: false
          description: Filter sessions from this date
          schema:
            type: string
            format: date
            example: "2024-01-01"
        - name: endDate
          in: query
          required: false
          description: Filter sessions until this date
          schema:
            type: string
            format: date
            example: "2024-01-31"
        - name: limit
          in: query
          required: false
          description: Maximum number of results to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          required: false
          description: Number of results to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Workout sessions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  workoutSessions:
                    type: array
                    items:
                      $ref: '#/components/schemas/WorkoutSession'
                  total:
                    type: integer
                    description: Total number of workout sessions
                  limit:
                    type: integer
                    description: Maximum number of results returned
                  offset:
                    type: integer
                    description: Number of results skipped
        '401':
          description: Unauthorized - invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/workouts/sessions/{sessionId}:
    get:
      summary: Get workout session
      description: Retrieve a specific workout session by ID
      operationId: getWorkoutSession
      tags:
        - Workout Sessions
      security:
        - BearerAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          description: Unique identifier for the workout session
          schema:
            type: string
            example: "session123"
      responses:
        '200':
          description: Workout session retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutSession'
        '401':
          description: Unauthorized - invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - insufficient permissions to access this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Workout session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/workouts/exercises:
    get:
      summary: List exercises
      description: Retrieve a list of available exercises
      operationId: listExercises
      tags:
        - Exercises
      security:
        - BearerAuth: []
      parameters:
        - name: category
          in: query
          required: false
          description: Filter by exercise category
          schema:
            type: string
            enum: [strength, cardio, flexibility, balance, sports]
        - name: muscleGroup
          in: query
          required: false
          description: Filter by target muscle group
          schema:
            type: string
            enum: [chest, back, shoulders, arms, legs, core, full-body]
        - name: equipment
          in: query
          required: false
          description: Filter by required equipment
          schema:
            type: string
            enum: [bodyweight, dumbbells, barbell, kettlebell, resistance-bands, machine, cardio]
        - name: difficulty
          in: query
          required: false
          description: Filter by difficulty level
          schema:
            type: string
            enum: [beginner, intermediate, advanced, expert]
        - name: search
          in: query
          required: false
          description: Search exercises by name or description
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: Maximum number of results to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          required: false
          description: Number of results to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Exercises retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  exercises:
                    type: array
                    items:
                      $ref: '#/components/schemas/Exercise'
                  total:
                    type: integer
                    description: Total number of exercises
                  limit:
                    type: integer
                    description: Maximum number of results returned
                  offset:
                    type: integer
                    description: Number of results skipped
        '401':
          description: Unauthorized - invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/workouts/exercises/{exerciseId}:
    get:
      summary: Get exercise
      description: Retrieve a specific exercise by ID
      operationId: getExercise
      tags:
        - Exercises
      security:
        - BearerAuth: []
      parameters:
        - name: exerciseId
          in: path
          required: true
          description: Unique identifier for the exercise
          schema:
            type: string
            example: "ex123"
      responses:
        '200':
          description: Exercise retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
        '401':
          description: Unauthorized - invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Exercise not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/workouts/progress-photos:
    post:
      summary: Upload progress photo
      description: Upload a progress photo for tracking physical changes
      operationId: uploadProgressPhoto
      tags:
        - Progress Photos
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadProgressPhotoRequest'
            example:
              userId: "user123"
              photoType: "front"
              notes: "After 4 weeks of training"
              takenAt: "2024-01-01T00:00:00Z"
      responses:
        '201':
          description: Progress photo uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgressPhoto'
        '400':
          description: Bad request - invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: List progress photos
      description: Retrieve a list of progress photos for a user
      operationId: listProgressPhotos
      tags:
        - Progress Photos
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          description: Unique identifier for the user
          schema:
            type: string
            example: "user123"
        - name: photoType
          in: query
          required: false
          description: Filter by photo type
          schema:
            type: string
            enum: [front, side, back, full-body]
        - name: startDate
          in: query
          required: false
          description: Filter photos from this date
          schema:
            type: string
            format: date
            example: "2024-01-01"
        - name: endDate
          in: query
          required: false
          description: Filter photos until this date
          schema:
            type: string
            format: date
            example: "2024-01-31"
        - name: limit
          in: query
          required: false
          description: Maximum number of results to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          required: false
          description: Number of results to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Progress photos retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  progressPhotos:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProgressPhoto'
                  total:
                    type: integer
                    description: Total number of progress photos
                  limit:
                    type: integer
                    description: Maximum number of results returned
                  offset:
                    type: integer
                    description: Number of results skipped
        '401':
          description: Unauthorized - invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/workouts/progress-photos/{photoId}:
    get:
      summary: Get progress photo
      description: Retrieve a specific progress photo by ID
      operationId: getProgressPhoto
      tags:
        - Progress Photos
      security:
        - BearerAuth: []
      parameters:
        - name: photoId
          in: path
          required: true
          description: Unique identifier for the progress photo
          schema:
            type: string
            example: "photo123"
      responses:
        '200':
          description: Progress photo retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgressPhoto'
        '401':
          description: Unauthorized - invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - insufficient permissions to access this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Progress photo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete progress photo
      description: Delete a progress photo and associated data
      operationId: deleteProgressPhoto
      tags:
        - Progress Photos
      security:
        - BearerAuth: []
      parameters:
        - name: photoId
          in: path
          required: true
          description: Unique identifier for the progress photo
          schema:
            type: string
            example: "photo123"
      responses:
        '204':
          description: Progress photo deleted successfully
        '401':
          description: Unauthorized - invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - insufficient permissions to access this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Progress photo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from authentication service

  schemas:
    WorkoutPlan:
      type: object
      required:
        - id
        - userId
        - name
        - description
        - difficulty
        - durationWeeks
        - frequencyPerWeek
        - exercises
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: Unique identifier for the workout plan
          example: "plan123"
        userId:
          type: string
          description: Unique identifier for the user
          example: "user123"
        name:
          type: string
          description: Name of the workout plan
          example: "Beginner Strength Program"
        description:
          type: string
          description: Description of the workout plan
          example: "A 4-week beginner strength program"
        difficulty:
          type: string
          description: Difficulty level of the workout plan
          enum: [beginner, intermediate, advanced, expert]
          example: "beginner"
        durationWeeks:
          type: integer
          description: Duration of the workout plan in weeks
          minimum: 1
          maximum: 52
          example: 4
        frequencyPerWeek:
          type: integer
          description: Number of workouts per week
          minimum: 1
          maximum: 7
          example: 3
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/WorkoutPlanExercise'
          description: List of exercises in the workout plan
        createdAt:
          type: string
          format: date-time
          description: Workout plan creation timestamp
          example: "2024-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Workout plan last update timestamp
          example: "2024-01-01T00:00:00Z"

    WorkoutPlanExercise:
      type: object
      required:
        - exerciseId
        - name
        - sets
        - reps
        - restSeconds
        - order
      properties:
        exerciseId:
          type: string
          description: Unique identifier for the exercise
          example: "ex123"
        name:
          type: string
          description: Name of the exercise
          example: "Push-ups"
        sets:
          type: integer
          description: Number of sets
          minimum: 1
          maximum: 20
          example: 3
        reps:
          type: integer
          description: Number of repetitions per set
          minimum: 1
          maximum: 1000
          example: 10
        restSeconds:
          type: integer
          description: Rest time between sets in seconds
          minimum: 0
          maximum: 600
          example: 60
        order:
          type: integer
          description: Order of the exercise in the workout
          minimum: 1
          example: 1

    WorkoutSession:
      type: object
      required:
        - id
        - userId
        - workoutPlanId
        - name
        - exercises
        - startedAt
        - completedAt
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: Unique identifier for the workout session
          example: "session123"
        userId:
          type: string
          description: Unique identifier for the user
          example: "user123"
        workoutPlanId:
          type: string
          description: Unique identifier for the workout plan
          example: "plan123"
        name:
          type: string
          description: Name of the workout session
          example: "Upper Body Workout"
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/WorkoutSessionExercise'
          description: List of exercises performed in the session
        startedAt:
          type: string
          format: date-time
          description: Session start timestamp
          example: "2024-01-01T00:00:00Z"
        completedAt:
          type: string
          format: date-time
          description: Session completion timestamp
          example: "2024-01-01T01:00:00Z"
        totalDuration:
          type: integer
          description: Total session duration in minutes
          example: 60
        notes:
          type: string
          description: Additional notes about the session
          example: "Great workout, felt strong today"
        createdAt:
          type: string
          format: date-time
          description: Session creation timestamp
          example: "2024-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Session last update timestamp
          example: "2024-01-01T00:00:00Z"

    WorkoutSessionExercise:
      type: object
      required:
        - exerciseId
        - name
        - sets
        - order
      properties:
        exerciseId:
          type: string
          description: Unique identifier for the exercise
          example: "ex123"
        name:
          type: string
          description: Name of the exercise
          example: "Push-ups"
        sets:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseSet'
          description: List of sets performed
        order:
          type: integer
          description: Order of the exercise in the session
          minimum: 1
          example: 1

    ExerciseSet:
      type: object
      required:
        - reps
        - weight
        - completed
      properties:
        reps:
          type: integer
          description: Number of repetitions performed
          minimum: 0
          maximum: 1000
          example: 10
        weight:
          type: number
          format: float
          description: Weight used in the set
          minimum: 0
          example: 0
        completed:
          type: boolean
          description: Whether the set was completed
          example: true
        notes:
          type: string
          description: Additional notes about the set
          example: "Good form"

    Exercise:
      type: object
      required:
        - id
        - name
        - description
        - category
        - muscleGroup
        - equipment
        - difficulty
        - instructions
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: Unique identifier for the exercise
          example: "ex123"
        name:
          type: string
          description: Name of the exercise
          example: "Push-ups"
        description:
          type: string
          description: Description of the exercise
          example: "A bodyweight exercise that targets the chest, shoulders, and triceps"
        category:
          type: string
          description: Category of the exercise
          enum: [strength, cardio, flexibility, balance, sports]
          example: "strength"
        muscleGroup:
          type: string
          description: Primary target muscle group
          enum: [chest, back, shoulders, arms, legs, core, full-body]
          example: "chest"
        equipment:
          type: string
          description: Required equipment
          enum: [bodyweight, dumbbells, barbell, kettlebell, resistance-bands, machine, cardio]
          example: "bodyweight"
        difficulty:
          type: string
          description: Difficulty level
          enum: [beginner, intermediate, advanced, expert]
          example: "beginner"
        instructions:
          type: array
          items:
            type: string
          description: Step-by-step instructions
          example: ["Start in a plank position", "Lower your body until your chest nearly touches the floor", "Push back up to the starting position"]
        tips:
          type: array
          items:
            type: string
          description: Tips for proper form and technique
          example: ["Keep your core tight", "Maintain a straight line from head to heels"]
        videoUrl:
          type: string
          format: uri
          description: URL to demonstration video
          example: "https://youtube.com/watch?v=example"
        imageUrl:
          type: string
          format: uri
          description: URL to exercise image
          example: "https://s3.amazonaws.com/gymcoach-ai-exercises/push-ups.jpg"
        createdAt:
          type: string
          format: date-time
          description: Exercise creation timestamp
          example: "2024-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Exercise last update timestamp
          example: "2024-01-01T00:00:00Z"

    ProgressPhoto:
      type: object
      required:
        - id
        - userId
        - photoType
        - imageUrl
        - takenAt
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: Unique identifier for the progress photo
          example: "photo123"
        userId:
          type: string
          description: Unique identifier for the user
          example: "user123"
        photoType:
          type: string
          description: Type of progress photo
          enum: [front, side, back, full-body]
          example: "front"
        imageUrl:
          type: string
          format: uri
          description: URL to the progress photo
          example: "https://s3.amazonaws.com/gymcoach-ai-progress/user123/photo123.jpg"
        thumbnailUrl:
          type: string
          format: uri
          description: URL to the thumbnail image
          example: "https://s3.amazonaws.com/gymcoach-ai-progress/user123/photo123-thumb.jpg"
        takenAt:
          type: string
          format: date-time
          description: When the photo was taken
          example: "2024-01-01T00:00:00Z"
        notes:
          type: string
          description: Additional notes about the photo
          example: "After 4 weeks of training"
        measurements:
          type: object
          description: Body measurements at the time of the photo
          properties:
            weight:
              type: number
              format: float
              description: Weight in the specified unit
              example: 70.5
            unit:
              type: string
              description: Unit of measurement
              enum: [kg, lbs]
              example: "kg"
            bodyFatPercentage:
              type: number
              format: float
              description: Body fat percentage
              example: 15.5
        createdAt:
          type: string
          format: date-time
          description: Photo creation timestamp
          example: "2024-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Photo last update timestamp
          example: "2024-01-01T00:00:00Z"

    CreateWorkoutPlanRequest:
      type: object
      required:
        - userId
        - name
        - description
        - difficulty
        - durationWeeks
        - frequencyPerWeek
        - exercises
      properties:
        userId:
          type: string
          description: Unique identifier for the user
          example: "user123"
        name:
          type: string
          description: Name of the workout plan
          example: "Beginner Strength Program"
        description:
          type: string
          description: Description of the workout plan
          example: "A 4-week beginner strength program"
        difficulty:
          type: string
          description: Difficulty level of the workout plan
          enum: [beginner, intermediate, advanced, expert]
          example: "beginner"
        durationWeeks:
          type: integer
          description: Duration of the workout plan in weeks
          minimum: 1
          maximum: 52
          example: 4
        frequencyPerWeek:
          type: integer
          description: Number of workouts per week
          minimum: 1
          maximum: 7
          example: 3
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/WorkoutPlanExercise'
          description: List of exercises in the workout plan

    UpdateWorkoutPlanRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the workout plan
          example: "Advanced Strength Program"
        description:
          type: string
          description: Description of the workout plan
          example: "An 8-week advanced strength program"
        difficulty:
          type: string
          description: Difficulty level of the workout plan
          enum: [beginner, intermediate, advanced, expert]
          example: "advanced"
        durationWeeks:
          type: integer
          description: Duration of the workout plan in weeks
          minimum: 1
          maximum: 52
          example: 8
        frequencyPerWeek:
          type: integer
          description: Number of workouts per week
          minimum: 1
          maximum: 7
          example: 4
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/WorkoutPlanExercise'
          description: List of exercises in the workout plan

    CreateWorkoutSessionRequest:
      type: object
      required:
        - userId
        - workoutPlanId
        - name
        - exercises
      properties:
        userId:
          type: string
          description: Unique identifier for the user
          example: "user123"
        workoutPlanId:
          type: string
          description: Unique identifier for the workout plan
          example: "plan123"
        name:
          type: string
          description: Name of the workout session
          example: "Upper Body Workout"
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/WorkoutSessionExercise'
          description: List of exercises performed in the session
        notes:
          type: string
          description: Additional notes about the session
          example: "Great workout, felt strong today"

    UploadProgressPhotoRequest:
      type: object
      required:
        - userId
        - photoType
        - takenAt
      properties:
        userId:
          type: string
          description: Unique identifier for the user
          example: "user123"
        photoType:
          type: string
          description: Type of progress photo
          enum: [front, side, back, full-body]
          example: "front"
        takenAt:
          type: string
          format: date-time
          description: When the photo was taken
          example: "2024-01-01T00:00:00Z"
        notes:
          type: string
          description: Additional notes about the photo
          example: "After 4 weeks of training"
        measurements:
          type: object
          description: Body measurements at the time of the photo
          properties:
            weight:
              type: number
              format: float
              description: Weight in the specified unit
              example: 70.5
            unit:
              type: string
              description: Unit of measurement
              enum: [kg, lbs]
              example: "kg"
            bodyFatPercentage:
              type: number
              format: float
              description: Body fat percentage
              example: 15.5

    ErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
      properties:
        error:
          type: string
          description: Error type
          example: "ValidationError"
        message:
          type: string
          description: Human-readable error message
          example: "Invalid input data provided"
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
          example: "2024-01-01T00:00:00Z"
        details:
          type: object
          description: Additional error details
          additionalProperties: true
        requestId:
          type: string
          description: Unique identifier for the request
          example: "req123"

tags:
  - name: Workout Plans
    description: Operations for managing workout plans
  - name: Workout Sessions
    description: Operations for managing workout sessions
  - name: Exercises
    description: Operations for managing exercises
  - name: Progress Photos
    description: Operations for managing progress photos
